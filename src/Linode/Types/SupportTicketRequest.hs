-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema SupportTicketRequest
module Linode.Types.SupportTicketRequest where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.SupportTicketRequest@ in the specification.
-- 
-- An object representing a created Support Ticket - a question or issue and request for help from the Linode support team.
-- Only one of the ID attributes (\`linode_id\`, \`domain_id\`, etc.) can be set on a single Support Ticket.
data SupportTicketRequest = SupportTicketRequest {
  -- | description: The full details of the issue or question.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 65000
  -- * Minimum length of 1
  supportTicketRequestDescription :: Data.Text.Internal.Text
  -- | domain_id: The ID of the Domain this ticket is regarding, if relevant.
  , supportTicketRequestDomainId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | linode_id: The ID of the Linode this ticket is regarding, if relevant.
  , supportTicketRequestLinodeId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lkecluster_id: The ID of the Kubernetes cluster this ticket is regarding, if relevant.
  , supportTicketRequestLkeclusterId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | longviewclient_id: The ID of the Longview client this ticket is regarding, if relevant.
  , supportTicketRequestLongviewclientId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | managed_issue: Designates if this ticket is related to a [Managed service](https:\/\/www.linode.com\/products\/managed\/). If \`true\`, the following constraints will apply:
  -- * No ID attributes (i.e. \`linode_id\`, \`domain_id\`, etc.) should be provided with this request.
  -- * Your account must have a [Managed service enabled](\/docs\/api\/managed\/\#managed-service-enable).
  , supportTicketRequestManagedIssue :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | nodebalancer_id: The ID of the NodeBalancer this ticket is regarding, if relevant.
  , supportTicketRequestNodebalancerId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | region: The [Region](\/docs\/api\/regions\/) ID for the associated VLAN this ticket is regarding.
  -- 
  -- Only allowed when submitting a VLAN ticket.
  , supportTicketRequestRegion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | summary: The summary or title for this SupportTicket.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 64
  -- * Minimum length of 1
  , supportTicketRequestSummary :: Data.Text.Internal.Text
  -- | vlan: The label of the VLAN this ticket is regarding, if relevant. To view your VLANs, use the VLANs List ([GET \/networking\/vlans](\/docs\/api\/networking\/\#vlans-list)) endpoint.
  -- 
  -- Requires a specified \`region\` to identify the VLAN.
  , supportTicketRequestVlan :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | volume_id: The ID of the Volume this ticket is regarding, if relevant.
  , supportTicketRequestVolumeId :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SupportTicketRequest
    where toJSON obj = Data.Aeson.Types.Internal.object ("description" Data.Aeson.Types.ToJSON..= supportTicketRequestDescription obj : "domain_id" Data.Aeson.Types.ToJSON..= supportTicketRequestDomainId obj : "linode_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLinodeId obj : "lkecluster_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLkeclusterId obj : "longviewclient_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLongviewclientId obj : "managed_issue" Data.Aeson.Types.ToJSON..= supportTicketRequestManagedIssue obj : "nodebalancer_id" Data.Aeson.Types.ToJSON..= supportTicketRequestNodebalancerId obj : "region" Data.Aeson.Types.ToJSON..= supportTicketRequestRegion obj : "summary" Data.Aeson.Types.ToJSON..= supportTicketRequestSummary obj : "vlan" Data.Aeson.Types.ToJSON..= supportTicketRequestVlan obj : "volume_id" Data.Aeson.Types.ToJSON..= supportTicketRequestVolumeId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("description" Data.Aeson.Types.ToJSON..= supportTicketRequestDescription obj) GHC.Base.<> (("domain_id" Data.Aeson.Types.ToJSON..= supportTicketRequestDomainId obj) GHC.Base.<> (("linode_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLinodeId obj) GHC.Base.<> (("lkecluster_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLkeclusterId obj) GHC.Base.<> (("longviewclient_id" Data.Aeson.Types.ToJSON..= supportTicketRequestLongviewclientId obj) GHC.Base.<> (("managed_issue" Data.Aeson.Types.ToJSON..= supportTicketRequestManagedIssue obj) GHC.Base.<> (("nodebalancer_id" Data.Aeson.Types.ToJSON..= supportTicketRequestNodebalancerId obj) GHC.Base.<> (("region" Data.Aeson.Types.ToJSON..= supportTicketRequestRegion obj) GHC.Base.<> (("summary" Data.Aeson.Types.ToJSON..= supportTicketRequestSummary obj) GHC.Base.<> (("vlan" Data.Aeson.Types.ToJSON..= supportTicketRequestVlan obj) GHC.Base.<> ("volume_id" Data.Aeson.Types.ToJSON..= supportTicketRequestVolumeId obj)))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON SupportTicketRequest
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "SupportTicketRequest" (\obj -> ((((((((((GHC.Base.pure SupportTicketRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "domain_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "linode_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lkecluster_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "longviewclient_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "managed_issue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nodebalancer_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "region")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "summary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vlan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "volume_id"))
-- | Create a new 'SupportTicketRequest' with all required fields.
mkSupportTicketRequest :: Data.Text.Internal.Text -- ^ 'supportTicketRequestDescription'
  -> Data.Text.Internal.Text -- ^ 'supportTicketRequestSummary'
  -> SupportTicketRequest
mkSupportTicketRequest supportTicketRequestDescription supportTicketRequestSummary = SupportTicketRequest{supportTicketRequestDescription = supportTicketRequestDescription,
                                                                                                          supportTicketRequestDomainId = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestLinodeId = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestLkeclusterId = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestLongviewclientId = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestManagedIssue = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestNodebalancerId = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestRegion = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestSummary = supportTicketRequestSummary,
                                                                                                          supportTicketRequestVlan = GHC.Maybe.Nothing,
                                                                                                          supportTicketRequestVolumeId = GHC.Maybe.Nothing}
