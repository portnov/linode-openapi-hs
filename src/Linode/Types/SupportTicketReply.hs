-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema SupportTicketReply
module Linode.Types.SupportTicketReply where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.SupportTicketReply@ in the specification.
-- 
-- An object representing a reply to a Support Ticket.
data SupportTicketReply = SupportTicketReply {
  -- | created: The date and time this Ticket reply was created.
  supportTicketReplyCreated :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | created_by: The User who submitted this reply.
  , supportTicketReplyCreatedBy :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description: The body of this Support Ticket reply.
  , supportTicketReplyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | from_linode: If set to true, this reply came from a Linode employee.
  , supportTicketReplyFromLinode :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | gravatar_id: The Gravatar ID of the User who created this reply.
  , supportTicketReplyGravatarId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: The unique ID of this Support Ticket reply.
  , supportTicketReplyId :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SupportTicketReply
    where toJSON obj = Data.Aeson.Types.Internal.object ("created" Data.Aeson.Types.ToJSON..= supportTicketReplyCreated obj : "created_by" Data.Aeson.Types.ToJSON..= supportTicketReplyCreatedBy obj : "description" Data.Aeson.Types.ToJSON..= supportTicketReplyDescription obj : "from_linode" Data.Aeson.Types.ToJSON..= supportTicketReplyFromLinode obj : "gravatar_id" Data.Aeson.Types.ToJSON..= supportTicketReplyGravatarId obj : "id" Data.Aeson.Types.ToJSON..= supportTicketReplyId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("created" Data.Aeson.Types.ToJSON..= supportTicketReplyCreated obj) GHC.Base.<> (("created_by" Data.Aeson.Types.ToJSON..= supportTicketReplyCreatedBy obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= supportTicketReplyDescription obj) GHC.Base.<> (("from_linode" Data.Aeson.Types.ToJSON..= supportTicketReplyFromLinode obj) GHC.Base.<> (("gravatar_id" Data.Aeson.Types.ToJSON..= supportTicketReplyGravatarId obj) GHC.Base.<> ("id" Data.Aeson.Types.ToJSON..= supportTicketReplyId obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON SupportTicketReply
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "SupportTicketReply" (\obj -> (((((GHC.Base.pure SupportTicketReply GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created_by")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "from_linode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gravatar_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id"))
-- | Create a new 'SupportTicketReply' with all required fields.
mkSupportTicketReply :: SupportTicketReply
mkSupportTicketReply = SupportTicketReply{supportTicketReplyCreated = GHC.Maybe.Nothing,
                                          supportTicketReplyCreatedBy = GHC.Maybe.Nothing,
                                          supportTicketReplyDescription = GHC.Maybe.Nothing,
                                          supportTicketReplyFromLinode = GHC.Maybe.Nothing,
                                          supportTicketReplyGravatarId = GHC.Maybe.Nothing,
                                          supportTicketReplyId = GHC.Maybe.Nothing}
