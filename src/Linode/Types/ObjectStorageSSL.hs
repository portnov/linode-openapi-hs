-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ObjectStorageSSL
module Linode.Types.ObjectStorageSSL where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.ObjectStorageSSL@ in the specification.
-- 
-- Upload a TLS\/SSL certificate and private key to be served when you visit your Object Storage bucket via HTTPS.
data ObjectStorageSSL = ObjectStorageSSL {
  -- | certificate: Your Base64 encoded and PEM formatted SSL certificate.
  objectStorageSSLCertificate :: Data.Text.Internal.Text
  -- | private_key: The private key associated with this TLS\/SSL certificate.
  , objectStorageSSLPrivateKey :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ObjectStorageSSL
    where toJSON obj = Data.Aeson.Types.Internal.object ("certificate" Data.Aeson.Types.ToJSON..= objectStorageSSLCertificate obj : "private_key" Data.Aeson.Types.ToJSON..= objectStorageSSLPrivateKey obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("certificate" Data.Aeson.Types.ToJSON..= objectStorageSSLCertificate obj) GHC.Base.<> ("private_key" Data.Aeson.Types.ToJSON..= objectStorageSSLPrivateKey obj))
instance Data.Aeson.Types.FromJSON.FromJSON ObjectStorageSSL
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ObjectStorageSSL" (\obj -> (GHC.Base.pure ObjectStorageSSL GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "private_key"))
-- | Create a new 'ObjectStorageSSL' with all required fields.
mkObjectStorageSSL :: Data.Text.Internal.Text -- ^ 'objectStorageSSLCertificate'
  -> Data.Text.Internal.Text -- ^ 'objectStorageSSLPrivateKey'
  -> ObjectStorageSSL
mkObjectStorageSSL objectStorageSSLCertificate objectStorageSSLPrivateKey = ObjectStorageSSL{objectStorageSSLCertificate = objectStorageSSLCertificate,
                                                                                             objectStorageSSLPrivateKey = objectStorageSSLPrivateKey}
