-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema IPAddressV6LinkLocal
module Linode.Types.IPAddressV6LinkLocal where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.IPAddressV6LinkLocal@ in the specification.
-- 
-- A link-local IPv6 address that exists in Linode\'s system,.
data IPAddressV6LinkLocal = IPAddressV6LinkLocal {
  -- | address: The IPv6 link-local address.
  iPAddressV6LinkLocalAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | gateway: The default gateway for this address.
  , iPAddressV6LinkLocalGateway :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | linode_id: The ID of the Linode this address currently belongs to.
  , iPAddressV6LinkLocalLinodeId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | prefix: The network prefix.
  , iPAddressV6LinkLocalPrefix :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | public: Whether this is a public or private IP address.
  , iPAddressV6LinkLocalPublic :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | rdns: The reverse DNS assigned to this address.
  , iPAddressV6LinkLocalRdns :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | region: The Region this address resides in.
  , iPAddressV6LinkLocalRegion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | subnet_mask: The subnet mask.
  , iPAddressV6LinkLocalSubnetMask :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | type: The type of address this is.
  , iPAddressV6LinkLocalType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IPAddressV6LinkLocal
    where toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalAddress obj : "gateway" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalGateway obj : "linode_id" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalLinodeId obj : "prefix" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalPrefix obj : "public" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalPublic obj : "rdns" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalRdns obj : "region" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalRegion obj : "subnet_mask" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalSubnetMask obj : "type" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalAddress obj) GHC.Base.<> (("gateway" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalGateway obj) GHC.Base.<> (("linode_id" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalLinodeId obj) GHC.Base.<> (("prefix" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalPrefix obj) GHC.Base.<> (("public" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalPublic obj) GHC.Base.<> (("rdns" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalRdns obj) GHC.Base.<> (("region" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalRegion obj) GHC.Base.<> (("subnet_mask" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalSubnetMask obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= iPAddressV6LinkLocalType obj)))))))))
instance Data.Aeson.Types.FromJSON.FromJSON IPAddressV6LinkLocal
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "IPAddressV6LinkLocal" (\obj -> ((((((((GHC.Base.pure IPAddressV6LinkLocal GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gateway")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "linode_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "prefix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "public")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "rdns")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "region")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subnet_mask")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type"))
-- | Create a new 'IPAddressV6LinkLocal' with all required fields.
mkIPAddressV6LinkLocal :: IPAddressV6LinkLocal
mkIPAddressV6LinkLocal = IPAddressV6LinkLocal{iPAddressV6LinkLocalAddress = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalGateway = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalLinodeId = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalPrefix = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalPublic = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalRdns = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalRegion = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalSubnetMask = GHC.Maybe.Nothing,
                                              iPAddressV6LinkLocalType = GHC.Maybe.Nothing}
