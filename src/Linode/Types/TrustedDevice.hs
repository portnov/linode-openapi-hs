-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TrustedDevice
module Linode.Types.TrustedDevice where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.TrustedDevice@ in the specification.
-- 
-- A trusted device object represents an active Remember Me session with \<a target=\"_top\" href=\"https:\/\/login.linode.com\">login.linode.com\<\/a>.
data TrustedDevice = TrustedDevice {
  -- | created: When this Remember Me session was started.  This corresponds to the time of login with the \"Remember Me\" box checked.
  trustedDeviceCreated :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expiry: When this TrustedDevice session expires.  Sessions typically last 30 days.
  , trustedDeviceExpiry :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: The unique ID for this TrustedDevice
  , trustedDeviceId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | last_authenticated: The last time this TrustedDevice was successfully used to authenticate to \<a target=\"_top\" href=\"https:\/\/login.linode.com\">login.linode.com\<\/a>.
  , trustedDeviceLastAuthenticated :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_remote_addr: The last IP Address to successfully authenticate with this TrustedDevice.
  , trustedDeviceLastRemoteAddr :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent: The User Agent of the browser that created this TrustedDevice session.
  , trustedDeviceUserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TrustedDevice
    where toJSON obj = Data.Aeson.Types.Internal.object ("created" Data.Aeson.Types.ToJSON..= trustedDeviceCreated obj : "expiry" Data.Aeson.Types.ToJSON..= trustedDeviceExpiry obj : "id" Data.Aeson.Types.ToJSON..= trustedDeviceId obj : "last_authenticated" Data.Aeson.Types.ToJSON..= trustedDeviceLastAuthenticated obj : "last_remote_addr" Data.Aeson.Types.ToJSON..= trustedDeviceLastRemoteAddr obj : "user_agent" Data.Aeson.Types.ToJSON..= trustedDeviceUserAgent obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("created" Data.Aeson.Types.ToJSON..= trustedDeviceCreated obj) GHC.Base.<> (("expiry" Data.Aeson.Types.ToJSON..= trustedDeviceExpiry obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= trustedDeviceId obj) GHC.Base.<> (("last_authenticated" Data.Aeson.Types.ToJSON..= trustedDeviceLastAuthenticated obj) GHC.Base.<> (("last_remote_addr" Data.Aeson.Types.ToJSON..= trustedDeviceLastRemoteAddr obj) GHC.Base.<> ("user_agent" Data.Aeson.Types.ToJSON..= trustedDeviceUserAgent obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON TrustedDevice
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TrustedDevice" (\obj -> (((((GHC.Base.pure TrustedDevice GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expiry")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_authenticated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_remote_addr")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "user_agent"))
-- | Create a new 'TrustedDevice' with all required fields.
mkTrustedDevice :: TrustedDevice
mkTrustedDevice = TrustedDevice{trustedDeviceCreated = GHC.Maybe.Nothing,
                                trustedDeviceExpiry = GHC.Maybe.Nothing,
                                trustedDeviceId = GHC.Maybe.Nothing,
                                trustedDeviceLastAuthenticated = GHC.Maybe.Nothing,
                                trustedDeviceLastRemoteAddr = GHC.Maybe.Nothing,
                                trustedDeviceUserAgent = GHC.Maybe.Nothing}
