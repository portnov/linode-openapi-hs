-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema LKENodePoolRequestBody
module Linode.Types.LKENodePoolRequestBody where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias
import {-# SOURCE #-} Linode.Types.LKENodePoolPropertiesDisksItems

-- | Defines the object schema located at @components.schemas.LKENodePoolRequestBody@ in the specification.
-- 
-- Specifies a collection of Linodes which will be members of a Kubernetes cluster.
data LKENodePoolRequestBody = LKENodePoolRequestBody {
  -- | autoscaler: When enabled, the number of nodes autoscales within the defined minimum and maximum values.
  -- 
  -- When making a request, \`max\` and \`min\` require each other.
  lKENodePoolRequestBodyAutoscaler :: (GHC.Maybe.Maybe LKENodePoolRequestBodyAutoscaler')
  -- | count: The number of nodes in the Node Pool.
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 1.0
  , lKENodePoolRequestBodyCount :: (GHC.Maybe.Maybe LKENodePoolPropertiesCount)
  -- | disks: **Note**: This field should be omitted except for special use cases. The disks specified here are
  -- partitions in *addition* to the primary partition and reduce the size of the primary partition,
  -- which can lead to stability problems for the Node.
  -- 
  -- This Node Pool\'s custom disk layout. Each item in this array will create a new disk
  -- partition for each node in this Node Pool.
  -- 
  --   * The custom disk layout is applied to each node in this Node Pool.
  --   * The maximum number of custom disk partitions that can be configured is 7.
  --   * Once the requested disk paritions are allocated, the remaining disk space is allocated to the node\'s boot disk.
  --   * A Node Pool\'s custom disk layout is immutable over the lifetime of the Node Pool.
  , lKENodePoolRequestBodyDisks :: (GHC.Maybe.Maybe ([LKENodePoolPropertiesDisksItems]))
  -- | tags: An array of tags applied to this object. Tags are for organizational purposes only.
  , lKENodePoolRequestBodyTags :: (GHC.Maybe.Maybe LKENodePoolPropertiesTags)
  -- | type: The Linode Type for all of the nodes in the Node Pool.
  , lKENodePoolRequestBodyType :: (GHC.Maybe.Maybe LKENodePoolPropertiesType)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON LKENodePoolRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("autoscaler" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler obj : "count" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyCount obj : "disks" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyDisks obj : "tags" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyTags obj : "type" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("autoscaler" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler obj) GHC.Base.<> (("count" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyCount obj) GHC.Base.<> (("disks" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyDisks obj) GHC.Base.<> (("tags" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyTags obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyType obj)))))
instance Data.Aeson.Types.FromJSON.FromJSON LKENodePoolRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "LKENodePoolRequestBody" (\obj -> ((((GHC.Base.pure LKENodePoolRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "autoscaler")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "disks")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tags")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type"))
-- | Create a new 'LKENodePoolRequestBody' with all required fields.
mkLKENodePoolRequestBody :: LKENodePoolRequestBody
mkLKENodePoolRequestBody = LKENodePoolRequestBody{lKENodePoolRequestBodyAutoscaler = GHC.Maybe.Nothing,
                                                  lKENodePoolRequestBodyCount = GHC.Maybe.Nothing,
                                                  lKENodePoolRequestBodyDisks = GHC.Maybe.Nothing,
                                                  lKENodePoolRequestBodyTags = GHC.Maybe.Nothing,
                                                  lKENodePoolRequestBodyType = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.LKENodePoolRequestBody.properties.autoscaler@ in the specification.
-- 
-- When enabled, the number of nodes autoscales within the defined minimum and maximum values.
-- 
-- When making a request, \`max\` and \`min\` require each other.
data LKENodePoolRequestBodyAutoscaler' = LKENodePoolRequestBodyAutoscaler' {
  -- | enabled: Whether autoscaling is enabled for this Node Pool. Defaults to \`false\`.
  lKENodePoolRequestBodyAutoscaler'Enabled :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | max: The maximum number of nodes to autoscale to. Defaults to the Node Pool\'s \`count\`. Defaults to the value provided by the \`count\` field.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 1.0
  , lKENodePoolRequestBodyAutoscaler'Max :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | min: The minimum number of nodes to autoscale to. Defaults to the Node Pool\'s \`count\`.
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 1.0
  , lKENodePoolRequestBodyAutoscaler'Min :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON LKENodePoolRequestBodyAutoscaler'
    where toJSON obj = Data.Aeson.Types.Internal.object ("enabled" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Enabled obj : "max" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Max obj : "min" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Min obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("enabled" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Enabled obj) GHC.Base.<> (("max" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Max obj) GHC.Base.<> ("min" Data.Aeson.Types.ToJSON..= lKENodePoolRequestBodyAutoscaler'Min obj)))
instance Data.Aeson.Types.FromJSON.FromJSON LKENodePoolRequestBodyAutoscaler'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "LKENodePoolRequestBodyAutoscaler'" (\obj -> ((GHC.Base.pure LKENodePoolRequestBodyAutoscaler' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "max")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "min"))
-- | Create a new 'LKENodePoolRequestBodyAutoscaler'' with all required fields.
mkLKENodePoolRequestBodyAutoscaler' :: LKENodePoolRequestBodyAutoscaler'
mkLKENodePoolRequestBodyAutoscaler' = LKENodePoolRequestBodyAutoscaler'{lKENodePoolRequestBodyAutoscaler'Enabled = GHC.Maybe.Nothing,
                                                                        lKENodePoolRequestBodyAutoscaler'Max = GHC.Maybe.Nothing,
                                                                        lKENodePoolRequestBodyAutoscaler'Min = GHC.Maybe.Nothing}
