-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema OAuthClient
module Linode.Types.OAuthClient where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.OAuthClient@ in the specification.
-- 
-- A third-party application registered to Linode that users may log into with their Linode account through our authentication server at \<a target=\"_top\" href=\"https:\/\/login.linode.com\">https:\/\/login.linode.com\<\/a>.  Using an OAuth Client, a third-party developer may be given access to some, or all, of a User\'s account for the purposes of their application.
data OAuthClient = OAuthClient {
  -- | id: The OAuth Client ID.  This is used to identify the client, and is a publicly-known value (it is not a secret).
  oAuthClientId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | label: The name of this application.  This will be presented to users when they are asked to grant it access to their Account.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 512
  -- * Minimum length of 1
  , oAuthClientLabel :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | public: If this is a public or private OAuth Client.  Public clients have a slightly different authentication workflow than private clients.  See the \<a target=\"_top\" href=\"https:\/\/oauth.net\/2\/\">OAuth spec\<\/a> for more details.
  , oAuthClientPublic :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | redirect_uri: The location a successful log in from \<a target=\"_top\" href=\"https:\/\/login.linode.com\">https:\/\/login.linode.com\<\/a> should be redirected to for this client.  The receiver of this redirect should be ready to accept an OAuth exchange code and finish the OAuth exchange.
  , oAuthClientRedirectUri :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | secret: The OAuth Client secret, used in the OAuth exchange.  This is returned as \`\<REDACTED>\` except when an OAuth Client is created or its secret is reset.  This is a secret, and should not be shared or disclosed publicly.
  , oAuthClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | status: The status of this application.  \`active\` by default.
  , oAuthClientStatus :: (GHC.Maybe.Maybe OAuthClientStatus')
  -- | thumbnail_url: The URL where this client\'s thumbnail may be viewed, or \`null\` if this client does not have a thumbnail set.
  , oAuthClientThumbnailUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OAuthClient
    where toJSON obj = Data.Aeson.Types.Internal.object ("id" Data.Aeson.Types.ToJSON..= oAuthClientId obj : "label" Data.Aeson.Types.ToJSON..= oAuthClientLabel obj : "public" Data.Aeson.Types.ToJSON..= oAuthClientPublic obj : "redirect_uri" Data.Aeson.Types.ToJSON..= oAuthClientRedirectUri obj : "secret" Data.Aeson.Types.ToJSON..= oAuthClientSecret obj : "status" Data.Aeson.Types.ToJSON..= oAuthClientStatus obj : "thumbnail_url" Data.Aeson.Types.ToJSON..= oAuthClientThumbnailUrl obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("id" Data.Aeson.Types.ToJSON..= oAuthClientId obj) GHC.Base.<> (("label" Data.Aeson.Types.ToJSON..= oAuthClientLabel obj) GHC.Base.<> (("public" Data.Aeson.Types.ToJSON..= oAuthClientPublic obj) GHC.Base.<> (("redirect_uri" Data.Aeson.Types.ToJSON..= oAuthClientRedirectUri obj) GHC.Base.<> (("secret" Data.Aeson.Types.ToJSON..= oAuthClientSecret obj) GHC.Base.<> (("status" Data.Aeson.Types.ToJSON..= oAuthClientStatus obj) GHC.Base.<> ("thumbnail_url" Data.Aeson.Types.ToJSON..= oAuthClientThumbnailUrl obj)))))))
instance Data.Aeson.Types.FromJSON.FromJSON OAuthClient
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OAuthClient" (\obj -> ((((((GHC.Base.pure OAuthClient GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "public")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "redirect_uri")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "thumbnail_url"))
-- | Create a new 'OAuthClient' with all required fields.
mkOAuthClient :: OAuthClient
mkOAuthClient = OAuthClient{oAuthClientId = GHC.Maybe.Nothing,
                            oAuthClientLabel = GHC.Maybe.Nothing,
                            oAuthClientPublic = GHC.Maybe.Nothing,
                            oAuthClientRedirectUri = GHC.Maybe.Nothing,
                            oAuthClientSecret = GHC.Maybe.Nothing,
                            oAuthClientStatus = GHC.Maybe.Nothing,
                            oAuthClientThumbnailUrl = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.OAuthClient.properties.status@ in the specification.
-- 
-- The status of this application.  \`active\` by default.
data OAuthClientStatus' =
   OAuthClientStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | OAuthClientStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | OAuthClientStatus'EnumActive -- ^ Represents the JSON value @"active"@
  | OAuthClientStatus'EnumDisabled -- ^ Represents the JSON value @"disabled"@
  | OAuthClientStatus'EnumSuspended -- ^ Represents the JSON value @"suspended"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OAuthClientStatus'
    where toJSON (OAuthClientStatus'Other val) = val
          toJSON (OAuthClientStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (OAuthClientStatus'EnumActive) = "active"
          toJSON (OAuthClientStatus'EnumDisabled) = "disabled"
          toJSON (OAuthClientStatus'EnumSuspended) = "suspended"
instance Data.Aeson.Types.FromJSON.FromJSON OAuthClientStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "active" -> OAuthClientStatus'EnumActive
                                            | val GHC.Classes.== "disabled" -> OAuthClientStatus'EnumDisabled
                                            | val GHC.Classes.== "suspended" -> OAuthClientStatus'EnumSuspended
                                            | GHC.Base.otherwise -> OAuthClientStatus'Other val)
