-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the types generated from the schema LinodeConfigInterface
module Linode.Types.LinodeConfigInterface where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common

-- | Defines the data type for the schema LinodeConfigInterface
-- 
-- The Network Interface to apply to this Linode\'s configuration profile.
data LinodeConfigInterface = LinodeConfigInterface {
  -- | ipam_address: This Network Interface\'s private IP address in Classless Inter-Domain Routing (CIDR) notation.
  -- 
  -- Only used for \`vlan\` purpose interfaces. Must be an empty string or \`null\` for \`public\` purpose interfaces.
  -- 
  -- The Linode is configured to use this address for the associated interface upon reboot if Network Helper is enabled. If Network Helper is disabled, the address can be enabled with [manual static IP configuration](\/docs\/guides\/linux-static-ip-configuration\/).
  -- 
  -- Must be unique among the Linode\'s interfaces.
  linodeConfigInterfaceIpam_address :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | label: The name of this interface.
  -- 
  -- Required for \`vlan\` purpose interfaces. Must be an empty string or \`null\` for \`public\` purpose interfaces.
  -- 
  -- If the VLAN label is new, a VLAN is created. Up to 10 VLANs can be created in each data center region. To view your active VLANs, use the [VLANs List](\/docs\/api\/networking\/\#vlans-list) endpoint.
  -- 
  -- May only consist of ASCII letters, numbers, and dashes (\`-\`).
  -- 
  -- Must be unique among the Linode\'s interfaces.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 64
  -- * Minimum length of 1
  -- * Must match pattern \'\/[a-z0-9-]+\/\'
  , linodeConfigInterfaceLabel :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | purpose: The type of interface.
  -- 
  -- * \`public\`
  --   * Only one \`public\` interface per Linode can be defined.
  --   * The Linode\'s default public IPv4 address is assigned to the \`public\` interface.
  --   * A Linode must have a public interface in the first\/eth0 position to be reachable via the public internet upon boot without additional system configuration. If no \`public\` interface is configured, the Linode is not directly reachable via the public internet. In this case, access can only be established via LISH or other Linodes connected to the same VLAN.
  -- 
  -- * \`vlan\`
  --   * Configuring a \`vlan\` purpose interface attaches this Linode to the VLAN with the specified \`label\`.
  --   * The Linode is configured to use the specified \`ipam_address\`, if any.
  , linodeConfigInterfacePurpose :: (GHC.Base.Maybe LinodeConfigInterfacePurpose)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON LinodeConfigInterface
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "ipam_address" (linodeConfigInterfaceIpam_address obj) : (Data.Aeson..=) "label" (linodeConfigInterfaceLabel obj) : (Data.Aeson..=) "purpose" (linodeConfigInterfacePurpose obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "ipam_address" (linodeConfigInterfaceIpam_address obj) GHC.Base.<> ((Data.Aeson..=) "label" (linodeConfigInterfaceLabel obj) GHC.Base.<> (Data.Aeson..=) "purpose" (linodeConfigInterfacePurpose obj)))
instance Data.Aeson.Types.FromJSON.FromJSON LinodeConfigInterface
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "LinodeConfigInterface" (\obj -> ((GHC.Base.pure LinodeConfigInterface GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ipam_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "purpose"))
-- | Defines the enum schema LinodeConfigInterfacePurpose
-- 
-- The type of interface.
-- 
-- * \`public\`
--   * Only one \`public\` interface per Linode can be defined.
--   * The Linode\'s default public IPv4 address is assigned to the \`public\` interface.
--   * A Linode must have a public interface in the first\/eth0 position to be reachable via the public internet upon boot without additional system configuration. If no \`public\` interface is configured, the Linode is not directly reachable via the public internet. In this case, access can only be established via LISH or other Linodes connected to the same VLAN.
-- 
-- * \`vlan\`
--   * Configuring a \`vlan\` purpose interface attaches this Linode to the VLAN with the specified \`label\`.
--   * The Linode is configured to use the specified \`ipam_address\`, if any.
data LinodeConfigInterfacePurpose
    = LinodeConfigInterfacePurposeEnumOther Data.Aeson.Types.Internal.Value
    | LinodeConfigInterfacePurposeEnumTyped Data.Text.Internal.Text
    | LinodeConfigInterfacePurposeEnumString_public
    | LinodeConfigInterfacePurposeEnumString_vlan
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON LinodeConfigInterfacePurpose
    where toJSON (LinodeConfigInterfacePurposeEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (LinodeConfigInterfacePurposeEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (LinodeConfigInterfacePurposeEnumString_public) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "public"
          toJSON (LinodeConfigInterfacePurposeEnumString_vlan) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "vlan"
instance Data.Aeson.FromJSON LinodeConfigInterfacePurpose
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "public")
                                          then LinodeConfigInterfacePurposeEnumString_public
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "vlan")
                                                then LinodeConfigInterfacePurposeEnumString_vlan
                                                else LinodeConfigInterfacePurposeEnumOther val)