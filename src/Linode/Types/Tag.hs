-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Tag
module Linode.Types.Tag where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.Tag@ in the specification.
-- 
-- A tag that has been applied to an object on your Account. Tags are currently for organizational purposes only.
data Tag = Tag {
  -- | label: A Label used for organization of objects on your Account.
  tagLabel :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Tag
    where toJSON obj = Data.Aeson.Types.Internal.object ("label" Data.Aeson.Types.ToJSON..= tagLabel obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("label" Data.Aeson.Types.ToJSON..= tagLabel obj)
instance Data.Aeson.Types.FromJSON.FromJSON Tag
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Tag" (\obj -> GHC.Base.pure Tag GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "label"))
-- | Create a new 'Tag' with all required fields.
mkTag :: Tag
mkTag = Tag{tagLabel = GHC.Maybe.Nothing}
