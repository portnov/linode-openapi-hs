-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the types generated from the schema ObjectStorageKey
module Linode.Types.ObjectStorageKey where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common

-- | Defines the data type for the schema ObjectStorageKey
-- 
-- A keypair used to communicate with the Object Storage S3 API.
data ObjectStorageKey = ObjectStorageKey {
  -- | access_key: This keypair\'s access key. This is not secret.
  objectStorageKeyAccess_key :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | bucket_access: Defines this key as a Limited Access Key. Limited Access Keys restrict this Object Storage key\'s access to only the bucket(s) declared in this array and define their bucket-level permissions.
  -- 
  -- 
  --   Limited Access Keys can:
  -- 
  --   * [list all buckets](\/docs\/api\/object-storage\/\#object-storage-buckets-list) available on this Account, but cannot perform any actions on a bucket unless it has access to the bucket.
  -- 
  -- 
  --   * [create new buckets](\/docs\/api\/object-storage\/\#object-storage-bucket-create), but do not have any access to the buckets it creates, unless explicitly given access to them.
  -- 
  -- 
  --   **Note:** You can create an Object Storage Limited Access Key without access to any buckets.
  --   This is achieved by sending a request with an empty \`bucket_access\` array.
  -- 
  -- 
  --   **Note:** If this field is omitted, a regular unlimited access key is issued.
  , objectStorageKeyBucket_access :: (GHC.Base.Maybe ([] ObjectStorageKeyBucket_access))
  -- | id: This keypair\'s unique ID
  , objectStorageKeyId :: (GHC.Base.Maybe GHC.Integer.Type.Integer)
  -- | label: The label given to this key. For display purposes only.
  , objectStorageKeyLabel :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | limited: Whether or not this key is a limited access key. Will return \`false\` if this key grants full access to all buckets on the user\'s account.
  , objectStorageKeyLimited :: (GHC.Base.Maybe GHC.Types.Bool)
  -- | secret_key: This keypair\'s secret key. Only returned on key creation.
  , objectStorageKeySecret_key :: (GHC.Base.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON ObjectStorageKey
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "access_key" (objectStorageKeyAccess_key obj) : (Data.Aeson..=) "bucket_access" (objectStorageKeyBucket_access obj) : (Data.Aeson..=) "id" (objectStorageKeyId obj) : (Data.Aeson..=) "label" (objectStorageKeyLabel obj) : (Data.Aeson..=) "limited" (objectStorageKeyLimited obj) : (Data.Aeson..=) "secret_key" (objectStorageKeySecret_key obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "access_key" (objectStorageKeyAccess_key obj) GHC.Base.<> ((Data.Aeson..=) "bucket_access" (objectStorageKeyBucket_access obj) GHC.Base.<> ((Data.Aeson..=) "id" (objectStorageKeyId obj) GHC.Base.<> ((Data.Aeson..=) "label" (objectStorageKeyLabel obj) GHC.Base.<> ((Data.Aeson..=) "limited" (objectStorageKeyLimited obj) GHC.Base.<> (Data.Aeson..=) "secret_key" (objectStorageKeySecret_key obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON ObjectStorageKey
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ObjectStorageKey" (\obj -> (((((GHC.Base.pure ObjectStorageKey GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "access_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bucket_access")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "limited")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "secret_key"))
-- | Defines the data type for the schema ObjectStorageKeyBucket_access
-- 
-- 
data ObjectStorageKeyBucket_access = ObjectStorageKeyBucket_access {
  -- | bucket_name: The unique label of the bucket to which the key will grant limited access.
  objectStorageKeyBucket_accessBucket_name :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | cluster: The Object Storage cluster where a bucket to which the key is granting access is hosted.
  , objectStorageKeyBucket_accessCluster :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | permissions: This Limited Access Key\'s permissions for the selected bucket.
  , objectStorageKeyBucket_accessPermissions :: (GHC.Base.Maybe ObjectStorageKeyBucket_accessPermissions)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON ObjectStorageKeyBucket_access
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "bucket_name" (objectStorageKeyBucket_accessBucket_name obj) : (Data.Aeson..=) "cluster" (objectStorageKeyBucket_accessCluster obj) : (Data.Aeson..=) "permissions" (objectStorageKeyBucket_accessPermissions obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "bucket_name" (objectStorageKeyBucket_accessBucket_name obj) GHC.Base.<> ((Data.Aeson..=) "cluster" (objectStorageKeyBucket_accessCluster obj) GHC.Base.<> (Data.Aeson..=) "permissions" (objectStorageKeyBucket_accessPermissions obj)))
instance Data.Aeson.Types.FromJSON.FromJSON ObjectStorageKeyBucket_access
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ObjectStorageKeyBucket_access" (\obj -> ((GHC.Base.pure ObjectStorageKeyBucket_access GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bucket_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cluster")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "permissions"))
-- | Defines the enum schema ObjectStorageKeyBucket_accessPermissions
-- 
-- This Limited Access Key\'s permissions for the selected bucket.
data ObjectStorageKeyBucket_accessPermissions
    = ObjectStorageKeyBucket_accessPermissionsEnumOther Data.Aeson.Types.Internal.Value
    | ObjectStorageKeyBucket_accessPermissionsEnumTyped Data.Text.Internal.Text
    | ObjectStorageKeyBucket_accessPermissionsEnumString_read_only
    | ObjectStorageKeyBucket_accessPermissionsEnumString_read_write
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON ObjectStorageKeyBucket_accessPermissions
    where toJSON (ObjectStorageKeyBucket_accessPermissionsEnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (ObjectStorageKeyBucket_accessPermissionsEnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (ObjectStorageKeyBucket_accessPermissionsEnumString_read_only) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "read_only"
          toJSON (ObjectStorageKeyBucket_accessPermissionsEnumString_read_write) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "read_write"
instance Data.Aeson.FromJSON ObjectStorageKeyBucket_accessPermissions
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "read_only")
                                          then ObjectStorageKeyBucket_accessPermissionsEnumString_read_only
                                          else if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "read_write")
                                                then ObjectStorageKeyBucket_accessPermissionsEnumString_read_write
                                                else ObjectStorageKeyBucket_accessPermissionsEnumOther val)