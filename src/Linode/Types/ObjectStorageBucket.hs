-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the types generated from the schema ObjectStorageBucket
module Linode.Types.ObjectStorageBucket where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common

-- | Defines the data type for the schema ObjectStorageBucket
-- 
-- An Object Storage Bucket. This should be accessed primarily through the S3 API; [click here for more information](https:\/\/docs.ceph.com\/en\/latest\/radosgw\/s3\/\#api).
data ObjectStorageBucket = ObjectStorageBucket {
  -- | cluster: The ID of the Object Storage Cluster this bucket is in.
  objectStorageBucketCluster :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | created: When this bucket was created.
  , objectStorageBucketCreated :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | hostname: The hostname where this bucket can be accessed. This hostname can be accessed through a browser if the bucket is made public.
  , objectStorageBucketHostname :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | label: The name of this bucket.
  , objectStorageBucketLabel :: (GHC.Base.Maybe Data.Text.Internal.Text)
  -- | objects: The number of objects stored in this bucket.
  , objectStorageBucketObjects :: (GHC.Base.Maybe GHC.Integer.Type.Integer)
  -- | size: The size of the bucket in bytes.
  , objectStorageBucketSize :: (GHC.Base.Maybe GHC.Integer.Type.Integer)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON ObjectStorageBucket
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "cluster" (objectStorageBucketCluster obj) : (Data.Aeson..=) "created" (objectStorageBucketCreated obj) : (Data.Aeson..=) "hostname" (objectStorageBucketHostname obj) : (Data.Aeson..=) "label" (objectStorageBucketLabel obj) : (Data.Aeson..=) "objects" (objectStorageBucketObjects obj) : (Data.Aeson..=) "size" (objectStorageBucketSize obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "cluster" (objectStorageBucketCluster obj) GHC.Base.<> ((Data.Aeson..=) "created" (objectStorageBucketCreated obj) GHC.Base.<> ((Data.Aeson..=) "hostname" (objectStorageBucketHostname obj) GHC.Base.<> ((Data.Aeson..=) "label" (objectStorageBucketLabel obj) GHC.Base.<> ((Data.Aeson..=) "objects" (objectStorageBucketObjects obj) GHC.Base.<> (Data.Aeson..=) "size" (objectStorageBucketSize obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON ObjectStorageBucket
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ObjectStorageBucket" (\obj -> (((((GHC.Base.pure ObjectStorageBucket GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cluster")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "hostname")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "objects")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "size"))