-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ObjectStorageObject
module Linode.Types.ObjectStorageObject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.ObjectStorageObject@ in the specification.
-- 
-- An Object in Object Storage, or a \"prefix\" that contains one or more objects when a \`delimiter\` is used.
data ObjectStorageObject = ObjectStorageObject {
  -- | etag: An MD-5 hash of the object. \`null\` if this object represents a prefix.
  objectStorageObjectEtag :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | is_truncated: Designates if there is another page of bucket objects.
  , objectStorageObjectIsTruncated :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | last_modified: The date and time this object was last modified. \`null\` if this object represents a prefix.
  , objectStorageObjectLastModified :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | name: The name of this object or prefix.
  , objectStorageObjectName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | next_marker: Returns the value you should pass to the \`marker\` query parameter to get the next page of objects. If there is no next page, \`null\` will be returned.
  , objectStorageObjectNextMarker :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | owner: The owner of this object, as a UUID. \`null\` if this object represents a prefix.
  , objectStorageObjectOwner :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | size: The size of this object, in bytes. \`null\` if this object represents a prefix.
  , objectStorageObjectSize :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ObjectStorageObject
    where toJSON obj = Data.Aeson.Types.Internal.object ("etag" Data.Aeson.Types.ToJSON..= objectStorageObjectEtag obj : "is_truncated" Data.Aeson.Types.ToJSON..= objectStorageObjectIsTruncated obj : "last_modified" Data.Aeson.Types.ToJSON..= objectStorageObjectLastModified obj : "name" Data.Aeson.Types.ToJSON..= objectStorageObjectName obj : "next_marker" Data.Aeson.Types.ToJSON..= objectStorageObjectNextMarker obj : "owner" Data.Aeson.Types.ToJSON..= objectStorageObjectOwner obj : "size" Data.Aeson.Types.ToJSON..= objectStorageObjectSize obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("etag" Data.Aeson.Types.ToJSON..= objectStorageObjectEtag obj) GHC.Base.<> (("is_truncated" Data.Aeson.Types.ToJSON..= objectStorageObjectIsTruncated obj) GHC.Base.<> (("last_modified" Data.Aeson.Types.ToJSON..= objectStorageObjectLastModified obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= objectStorageObjectName obj) GHC.Base.<> (("next_marker" Data.Aeson.Types.ToJSON..= objectStorageObjectNextMarker obj) GHC.Base.<> (("owner" Data.Aeson.Types.ToJSON..= objectStorageObjectOwner obj) GHC.Base.<> ("size" Data.Aeson.Types.ToJSON..= objectStorageObjectSize obj)))))))
instance Data.Aeson.Types.FromJSON.FromJSON ObjectStorageObject
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ObjectStorageObject" (\obj -> ((((((GHC.Base.pure ObjectStorageObject GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "etag")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "is_truncated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_modified")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "next_marker")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "size"))
-- | Create a new 'ObjectStorageObject' with all required fields.
mkObjectStorageObject :: ObjectStorageObject
mkObjectStorageObject = ObjectStorageObject{objectStorageObjectEtag = GHC.Maybe.Nothing,
                                            objectStorageObjectIsTruncated = GHC.Maybe.Nothing,
                                            objectStorageObjectLastModified = GHC.Maybe.Nothing,
                                            objectStorageObjectName = GHC.Maybe.Nothing,
                                            objectStorageObjectNextMarker = GHC.Maybe.Nothing,
                                            objectStorageObjectOwner = GHC.Maybe.Nothing,
                                            objectStorageObjectSize = GHC.Maybe.Nothing}
