-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema WarningObject
module Linode.Types.WarningObject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Linode.Common
import Linode.TypeAlias

-- | Defines the object schema located at @components.schemas.WarningObject@ in the specification.
-- 
-- An object for describing a single warning associated with a response.
data WarningObject = WarningObject {
  -- | details: Specific information related to the warning.
  warningObjectDetails :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | title: The general warning message.
  , warningObjectTitle :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON WarningObject
    where toJSON obj = Data.Aeson.Types.Internal.object ("details" Data.Aeson.Types.ToJSON..= warningObjectDetails obj : "title" Data.Aeson.Types.ToJSON..= warningObjectTitle obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("details" Data.Aeson.Types.ToJSON..= warningObjectDetails obj) GHC.Base.<> ("title" Data.Aeson.Types.ToJSON..= warningObjectTitle obj))
instance Data.Aeson.Types.FromJSON.FromJSON WarningObject
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "WarningObject" (\obj -> (GHC.Base.pure WarningObject GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "title"))
-- | Create a new 'WarningObject' with all required fields.
mkWarningObject :: WarningObject
mkWarningObject = WarningObject{warningObjectDetails = GHC.Maybe.Nothing,
                                warningObjectTitle = GHC.Maybe.Nothing}
