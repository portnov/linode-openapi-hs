-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation deleteIPv6Range
module Linode.Operations.DeleteIPv6Range where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Linode.Common
import Linode.Types

-- | > DELETE /networking/ipv6/ranges/{range}
-- 
-- Removes this IPv6 range from your account and disconnects the range from any assigned Linodes.
-- 
-- **Note:** Shared IPv6 ranges cannot be deleted at this time. Please contact Customer Support for assistance.
deleteIPv6Range :: forall m . Linode.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ range: The IPv6 range to access. Corresponds to the \`range\` property of objects returned from the IPv6 Ranges List ([GET \/networking\/ipv6\/ranges](\/docs\/api\/networking\/\#ipv6-ranges-list)) command.  **Note**: Omit the prefix length of the IPv6 range. 
  -> Linode.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteIPv6RangeResponse) -- ^ Monadic computation which returns the result of the operation
deleteIPv6Range range = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either DeleteIPv6RangeResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> DeleteIPv6RangeResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                 Data.Aeson.Types.Internal.Object)
                                                                                                                                                                  | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> DeleteIPv6RangeResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                   DeleteIPv6RangeResponseBodyDefault)
                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Linode.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/networking/ipv6/ranges/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Linode.Common.stringifyModel range)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | Represents a response of the operation 'deleteIPv6Range'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteIPv6RangeResponseError' is used.
data DeleteIPv6RangeResponse =
   DeleteIPv6RangeResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | DeleteIPv6RangeResponse200 Data.Aeson.Types.Internal.Object -- ^ IPv6 Range deleted.
  | DeleteIPv6RangeResponseDefault DeleteIPv6RangeResponseBodyDefault -- ^ Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @components.responses.ErrorResponse.content.application\/json.schema@ in the specification.
-- 
-- 
data DeleteIPv6RangeResponseBodyDefault = DeleteIPv6RangeResponseBodyDefault {
  -- | errors
  deleteIPv6RangeResponseBodyDefaultErrors :: (GHC.Maybe.Maybe ([ErrorObject]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteIPv6RangeResponseBodyDefault
    where toJSON obj = Data.Aeson.Types.Internal.object ("errors" Data.Aeson.Types.ToJSON..= deleteIPv6RangeResponseBodyDefaultErrors obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("errors" Data.Aeson.Types.ToJSON..= deleteIPv6RangeResponseBodyDefaultErrors obj)
instance Data.Aeson.Types.FromJSON.FromJSON DeleteIPv6RangeResponseBodyDefault
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteIPv6RangeResponseBodyDefault" (\obj -> GHC.Base.pure DeleteIPv6RangeResponseBodyDefault GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "errors"))
-- | Create a new 'DeleteIPv6RangeResponseBodyDefault' with all required fields.
mkDeleteIPv6RangeResponseBodyDefault :: DeleteIPv6RangeResponseBodyDefault
mkDeleteIPv6RangeResponseBodyDefault = DeleteIPv6RangeResponseBodyDefault{deleteIPv6RangeResponseBodyDefaultErrors = GHC.Maybe.Nothing}
