-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation createDomain
module Linode.Operations.CreateDomain where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Linode.Common
import Linode.Types

-- | > POST /domains
-- 
-- Adds a new Domain to Linode\'s DNS Manager. Linode is not a registrar, and you must own the domain before adding it here. Be sure to point your registrar to Linode\'s nameservers so that the records hosted here are used.
createDomain :: forall m . Linode.Common.MonadHTTP m => CreateDomainRequestBody -- ^ The request body to send
  -> Linode.Common.ClientT m (Network.HTTP.Client.Types.Response CreateDomainResponse) -- ^ Monadic computation which returns the result of the operation
createDomain body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either CreateDomainResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> CreateDomainResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                       Domain)
                                                                                                                                                           | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> CreateDomainResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                         CreateDomainResponseBodyDefault)
                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Linode.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/domains") GHC.Base.mempty (GHC.Maybe.Just body) Linode.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/domains.POST.requestBody.content.application\/json.schema.allOf@ in the specification.
-- 
-- 
data CreateDomainRequestBody = CreateDomainRequestBody {
  -- | axfr_ips: The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.
  createDomainRequestBodyAxfrIps :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | description: A description for this Domain. This is for display purposes only.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 255
  -- * Minimum length of 1
  , createDomainRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | domain: The domain this Domain represents. Domain labels cannot be longer than 63 characters and must conform to [RFC1035](https:\/\/tools.ietf.org\/html\/rfc1035). Domains must be unique on Linode\'s platform, including across different Linode accounts; there cannot be two Domains representing the same domain.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 255
  -- * Minimum length of 1
  -- * Must match pattern \'\\A(\\*\\.)?([a-zA-Z0-9-_]{1,63}\\.)+([a-zA-Z]{2,3}\\.)?([a-zA-Z]{2,16}|xn--[a-zA-Z0-9]+)\\Z\'
  , createDomainRequestBodyDomain :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expire_sec: The amount of time in seconds that may pass before this Domain is no longer
  -- authoritative.
  -- 
  -- * Valid values are
  -- 0, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200.
  -- 
  -- * Any other value is rounded up to the nearest valid value.
  -- 
  -- * A value of 0 is equivalent to the default value of 1209600.
  , createDomainRequestBodyExpireSec :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | group: The group this Domain belongs to.  This is for display purposes only.
  -- 
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 50
  -- * Minimum length of 1
  , createDomainRequestBodyGroup :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: This Domain\'s unique ID
  , createDomainRequestBodyId :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | master_ips: The IP addresses representing the master DNS for this Domain. At least one value is required for \`type\` slave Domains.
  , createDomainRequestBodyMasterIps :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | refresh_sec: The amount of time in seconds before this Domain should be refreshed.
  -- 
  -- * Valid values are
  -- 0, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200.
  -- 
  -- * Any other value is rounded up to the nearest valid value.
  -- 
  -- * A value of 0 is equivalent to the default value of 14400.
  , createDomainRequestBodyRefreshSec :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | retry_sec: The interval, in seconds, at which a failed refresh should be retried.
  -- 
  -- * Valid values are
  -- 0, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200.
  -- 
  -- * Any other value is rounded up to the nearest valid value.
  -- 
  -- * A value of 0 is equivalent to the default value of 14400.
  , createDomainRequestBodyRetrySec :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | soa_email: Start of Authority email address. This is required for \`type\` master Domains.
  , createDomainRequestBodySoaEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | status: Used to control whether this Domain is currently being rendered.
  , createDomainRequestBodyStatus :: (GHC.Maybe.Maybe CreateDomainRequestBodyStatus')
  -- | tags: An array of tags applied to this object.  Tags are for organizational purposes only.
  , createDomainRequestBodyTags :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | ttl_sec: \"Time to Live\" - the amount of time in seconds that this Domain\'s records may be cached by resolvers or other domain servers.
  -- * Valid values are 0, 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200.
  -- * Any other value is rounded up to the nearest valid value.
  -- * A value of 0 is equivalent to the default value of 86400.
  , createDomainRequestBodyTtlSec :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | type: Whether this Domain represents the authoritative source of information for the domain it describes (\"master\"), or whether it is a read-only copy of a master (\"slave\").
  , createDomainRequestBodyType :: (GHC.Maybe.Maybe CreateDomainRequestBodyType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateDomainRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("axfr_ips" Data.Aeson.Types.ToJSON..= createDomainRequestBodyAxfrIps obj : "description" Data.Aeson.Types.ToJSON..= createDomainRequestBodyDescription obj : "domain" Data.Aeson.Types.ToJSON..= createDomainRequestBodyDomain obj : "expire_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyExpireSec obj : "group" Data.Aeson.Types.ToJSON..= createDomainRequestBodyGroup obj : "id" Data.Aeson.Types.ToJSON..= createDomainRequestBodyId obj : "master_ips" Data.Aeson.Types.ToJSON..= createDomainRequestBodyMasterIps obj : "refresh_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyRefreshSec obj : "retry_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyRetrySec obj : "soa_email" Data.Aeson.Types.ToJSON..= createDomainRequestBodySoaEmail obj : "status" Data.Aeson.Types.ToJSON..= createDomainRequestBodyStatus obj : "tags" Data.Aeson.Types.ToJSON..= createDomainRequestBodyTags obj : "ttl_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyTtlSec obj : "type" Data.Aeson.Types.ToJSON..= createDomainRequestBodyType obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("axfr_ips" Data.Aeson.Types.ToJSON..= createDomainRequestBodyAxfrIps obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= createDomainRequestBodyDescription obj) GHC.Base.<> (("domain" Data.Aeson.Types.ToJSON..= createDomainRequestBodyDomain obj) GHC.Base.<> (("expire_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyExpireSec obj) GHC.Base.<> (("group" Data.Aeson.Types.ToJSON..= createDomainRequestBodyGroup obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= createDomainRequestBodyId obj) GHC.Base.<> (("master_ips" Data.Aeson.Types.ToJSON..= createDomainRequestBodyMasterIps obj) GHC.Base.<> (("refresh_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyRefreshSec obj) GHC.Base.<> (("retry_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyRetrySec obj) GHC.Base.<> (("soa_email" Data.Aeson.Types.ToJSON..= createDomainRequestBodySoaEmail obj) GHC.Base.<> (("status" Data.Aeson.Types.ToJSON..= createDomainRequestBodyStatus obj) GHC.Base.<> (("tags" Data.Aeson.Types.ToJSON..= createDomainRequestBodyTags obj) GHC.Base.<> (("ttl_sec" Data.Aeson.Types.ToJSON..= createDomainRequestBodyTtlSec obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= createDomainRequestBodyType obj))))))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON CreateDomainRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "CreateDomainRequestBody" (\obj -> (((((((((((((GHC.Base.pure CreateDomainRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "axfr_ips")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "domain")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expire_sec")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "master_ips")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "refresh_sec")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "retry_sec")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "soa_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tags")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ttl_sec")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type"))
-- | Create a new 'CreateDomainRequestBody' with all required fields.
mkCreateDomainRequestBody :: CreateDomainRequestBody
mkCreateDomainRequestBody = CreateDomainRequestBody{createDomainRequestBodyAxfrIps = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyDescription = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyDomain = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyExpireSec = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyGroup = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyId = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyMasterIps = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyRefreshSec = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyRetrySec = GHC.Maybe.Nothing,
                                                    createDomainRequestBodySoaEmail = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyStatus = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyTags = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyTtlSec = GHC.Maybe.Nothing,
                                                    createDomainRequestBodyType = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/domains.POST.requestBody.content.application\/json.schema.allOf.properties.status@ in the specification.
-- 
-- Used to control whether this Domain is currently being rendered.
data CreateDomainRequestBodyStatus' =
   CreateDomainRequestBodyStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | CreateDomainRequestBodyStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | CreateDomainRequestBodyStatus'EnumDisabled -- ^ Represents the JSON value @"disabled"@
  | CreateDomainRequestBodyStatus'EnumActive -- ^ Represents the JSON value @"active"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateDomainRequestBodyStatus'
    where toJSON (CreateDomainRequestBodyStatus'Other val) = val
          toJSON (CreateDomainRequestBodyStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (CreateDomainRequestBodyStatus'EnumDisabled) = "disabled"
          toJSON (CreateDomainRequestBodyStatus'EnumActive) = "active"
instance Data.Aeson.Types.FromJSON.FromJSON CreateDomainRequestBodyStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "disabled" -> CreateDomainRequestBodyStatus'EnumDisabled
                                            | val GHC.Classes.== "active" -> CreateDomainRequestBodyStatus'EnumActive
                                            | GHC.Base.otherwise -> CreateDomainRequestBodyStatus'Other val)
-- | Defines the enum schema located at @paths.\/domains.POST.requestBody.content.application\/json.schema.allOf.properties.type@ in the specification.
-- 
-- Whether this Domain represents the authoritative source of information for the domain it describes (\"master\"), or whether it is a read-only copy of a master (\"slave\").
data CreateDomainRequestBodyType' =
   CreateDomainRequestBodyType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | CreateDomainRequestBodyType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | CreateDomainRequestBodyType'EnumMaster -- ^ Represents the JSON value @"master"@
  | CreateDomainRequestBodyType'EnumSlave -- ^ Represents the JSON value @"slave"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateDomainRequestBodyType'
    where toJSON (CreateDomainRequestBodyType'Other val) = val
          toJSON (CreateDomainRequestBodyType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (CreateDomainRequestBodyType'EnumMaster) = "master"
          toJSON (CreateDomainRequestBodyType'EnumSlave) = "slave"
instance Data.Aeson.Types.FromJSON.FromJSON CreateDomainRequestBodyType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "master" -> CreateDomainRequestBodyType'EnumMaster
                                            | val GHC.Classes.== "slave" -> CreateDomainRequestBodyType'EnumSlave
                                            | GHC.Base.otherwise -> CreateDomainRequestBodyType'Other val)
-- | Represents a response of the operation 'createDomain'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'CreateDomainResponseError' is used.
data CreateDomainResponse =
   CreateDomainResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | CreateDomainResponse200 Domain -- ^ Domain added successfully. 
  | CreateDomainResponseDefault CreateDomainResponseBodyDefault -- ^ Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @components.responses.ErrorResponse.content.application\/json.schema@ in the specification.
-- 
-- 
data CreateDomainResponseBodyDefault = CreateDomainResponseBodyDefault {
  -- | errors
  createDomainResponseBodyDefaultErrors :: (GHC.Maybe.Maybe ([ErrorObject]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CreateDomainResponseBodyDefault
    where toJSON obj = Data.Aeson.Types.Internal.object ("errors" Data.Aeson.Types.ToJSON..= createDomainResponseBodyDefaultErrors obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("errors" Data.Aeson.Types.ToJSON..= createDomainResponseBodyDefaultErrors obj)
instance Data.Aeson.Types.FromJSON.FromJSON CreateDomainResponseBodyDefault
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "CreateDomainResponseBodyDefault" (\obj -> GHC.Base.pure CreateDomainResponseBodyDefault GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "errors"))
-- | Create a new 'CreateDomainResponseBodyDefault' with all required fields.
mkCreateDomainResponseBodyDefault :: CreateDomainResponseBodyDefault
mkCreateDomainResponseBodyDefault = CreateDomainResponseBodyDefault{createDomainResponseBodyDefaultErrors = GHC.Maybe.Nothing}
