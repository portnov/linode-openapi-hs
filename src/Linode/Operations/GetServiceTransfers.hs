-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation getServiceTransfers
module Linode.Operations.GetServiceTransfers where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Linode.Common
import Linode.Types
import Linode.ManualTypes

-- | > GET /account/service-transfers
-- 
-- Returns a collection of all created and accepted Service Transfers for this account, regardless of the user that created or accepted the transfer.
-- 
-- This command can only be accessed by the unrestricted users of an account.
getServiceTransfers :: forall m s . (Linode.Common.MonadHTTP m, Linode.Common.SecurityScheme s) => Linode.Common.Configuration s  -- ^ The configuration to use in the request
  -> GHC.Base.Maybe GHC.Integer.Type.Integer                                                                                         -- ^ page: The page of a collection to return. | Constraints: Minimum  of 1.0
  -> GHC.Base.Maybe GHC.Integer.Type.Integer                                                                                         -- ^ page_size: The number of items to return per page. | Constraints: Maxium  of 100.0, Minimum  of 25.0
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response GetServiceTransfersResponse)) -- ^ Monad containing the result of the operation
getServiceTransfers config
                    page
                    page_size = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetServiceTransfersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetServiceTransfersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                GetServiceTransfersResponseBody200)
                                                                                                                                                                                             | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetServiceTransfersResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                  GetServiceTransfersResponseBodyDefault)
                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (Linode.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/account/service-transfers") ((Data.Text.pack "page",
                                                                                                                                                                                                                                                                                                                                                                                                                                                   Linode.Common.stringifyModel Data.Functor.<$> page) : ((Data.Text.pack "page_size",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Linode.Common.stringifyModel Data.Functor.<$> page_size) : [])))
-- | > GET /account/service-transfers
-- 
-- The same as 'getServiceTransfers' but returns the raw 'Data.ByteString.Char8.ByteString'
getServiceTransfersRaw :: forall m s . (Linode.Common.MonadHTTP m,
                                        Linode.Common.SecurityScheme s) =>
                          Linode.Common.Configuration s ->
                          GHC.Base.Maybe GHC.Integer.Type.Integer ->
                          GHC.Base.Maybe GHC.Integer.Type.Integer ->
                          m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getServiceTransfersRaw config
                       page
                       page_size = GHC.Base.id (Linode.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/account/service-transfers") ((Data.Text.pack "page",
                                                                                                                                                                                                  Linode.Common.stringifyModel Data.Functor.<$> page) : ((Data.Text.pack "page_size",
                                                                                                                                                                                                                                                           Linode.Common.stringifyModel Data.Functor.<$> page_size) : [])))
-- | > GET /account/service-transfers
-- 
-- Monadic version of 'getServiceTransfers' (use with 'Linode.Common.runWithConfiguration')
getServiceTransfersM :: forall m s . (Linode.Common.MonadHTTP m,
                                      Linode.Common.SecurityScheme s) =>
                        GHC.Base.Maybe GHC.Integer.Type.Integer ->
                        GHC.Base.Maybe GHC.Integer.Type.Integer ->
                        Control.Monad.Trans.Reader.ReaderT (Linode.Common.Configuration s)
                                                           m
                                                           (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                               (Network.HTTP.Client.Types.Response GetServiceTransfersResponse))
getServiceTransfersM page
                     page_size = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either GetServiceTransfersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetServiceTransfersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                 GetServiceTransfersResponseBody200)
                                                                                                                                                                                              | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetServiceTransfersResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                   GetServiceTransfersResponseBodyDefault)
                                                                                                                                                                                              | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (Linode.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/account/service-transfers") ((Data.Text.pack "page",
                                                                                                                                                                                                                                                                                                                                                                                                                                              Linode.Common.stringifyModel Data.Functor.<$> page) : ((Data.Text.pack "page_size",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Linode.Common.stringifyModel Data.Functor.<$> page_size) : [])))
-- | > GET /account/service-transfers
-- 
-- Monadic version of 'getServiceTransfersRaw' (use with 'Linode.Common.runWithConfiguration')
getServiceTransfersRawM :: forall m s . (Linode.Common.MonadHTTP m,
                                         Linode.Common.SecurityScheme s) =>
                           GHC.Base.Maybe GHC.Integer.Type.Integer ->
                           GHC.Base.Maybe GHC.Integer.Type.Integer ->
                           Control.Monad.Trans.Reader.ReaderT (Linode.Common.Configuration s)
                                                              m
                                                              (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                  (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getServiceTransfersRawM page
                        page_size = GHC.Base.id (Linode.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/account/service-transfers") ((Data.Text.pack "page",
                                                                                                                                                                                             Linode.Common.stringifyModel Data.Functor.<$> page) : ((Data.Text.pack "page_size",
                                                                                                                                                                                                                                                      Linode.Common.stringifyModel Data.Functor.<$> page_size) : [])))
-- | Represents a response of the operation 'getServiceTransfers'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetServiceTransfersResponseError' is used.
data GetServiceTransfersResponse =                                             
   GetServiceTransfersResponseError GHC.Base.String                            -- ^ Means either no matching case available or a parse error
  | GetServiceTransfersResponse200 GetServiceTransfersResponseBody200          -- ^ Returns a paginated list of Service Transfer objects containing the details of all transfers that have been created and accepted by this account. 
  | GetServiceTransfersResponseDefault GetServiceTransfersResponseBodyDefault  -- ^ Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the data type for the schema GetServiceTransfersResponseBody200
-- 
-- 
data GetServiceTransfersResponseBody200 = GetServiceTransfersResponseBody200 {
  -- | data
  getServiceTransfersResponseBody200Data :: (GHC.Base.Maybe ([] ServiceTransfer))
  -- | page
  , getServiceTransfersResponseBody200Page :: (GHC.Base.Maybe PaginationEnvelope_properties_page)
  -- | pages
  , getServiceTransfersResponseBody200Pages :: (GHC.Base.Maybe PaginationEnvelope_properties_pages)
  -- | results
  , getServiceTransfersResponseBody200Results :: (GHC.Base.Maybe PaginationEnvelope_properties_results)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetServiceTransfersResponseBody200
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "data" (getServiceTransfersResponseBody200Data obj) : (Data.Aeson..=) "page" (getServiceTransfersResponseBody200Page obj) : (Data.Aeson..=) "pages" (getServiceTransfersResponseBody200Pages obj) : (Data.Aeson..=) "results" (getServiceTransfersResponseBody200Results obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "data" (getServiceTransfersResponseBody200Data obj) GHC.Base.<> ((Data.Aeson..=) "page" (getServiceTransfersResponseBody200Page obj) GHC.Base.<> ((Data.Aeson..=) "pages" (getServiceTransfersResponseBody200Pages obj) GHC.Base.<> (Data.Aeson..=) "results" (getServiceTransfersResponseBody200Results obj))))
instance Data.Aeson.Types.FromJSON.FromJSON GetServiceTransfersResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetServiceTransfersResponseBody200" (\obj -> (((GHC.Base.pure GetServiceTransfersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "page")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "pages")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "results"))
-- | Defines the data type for the schema GetServiceTransfersResponseBodyDefault
-- 
-- 
data GetServiceTransfersResponseBodyDefault = GetServiceTransfersResponseBodyDefault {
  -- | errors
  getServiceTransfersResponseBodyDefaultErrors :: (GHC.Base.Maybe ([] ErrorObject))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetServiceTransfersResponseBodyDefault
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "errors" (getServiceTransfersResponseBodyDefaultErrors obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "errors" (getServiceTransfersResponseBodyDefaultErrors obj))
instance Data.Aeson.Types.FromJSON.FromJSON GetServiceTransfersResponseBodyDefault
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetServiceTransfersResponseBodyDefault" (\obj -> GHC.Base.pure GetServiceTransfersResponseBodyDefault GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "errors"))
