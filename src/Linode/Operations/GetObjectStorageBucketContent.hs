-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getObjectStorageBucketContent
module Linode.Operations.GetObjectStorageBucketContent where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Linode.Common
import Linode.Types

-- | > GET /object-storage/buckets/{clusterId}/{bucket}/object-list
-- 
-- Returns the contents of a bucket. The contents are paginated using a \`marker\`,
-- which is the name of the last object on the previous page.  Objects may
-- be filtered by \`prefix\` and \`delimiter\` as well; see Query Parameters for more
-- information.
-- 
-- 
-- This endpoint is available for convenience. It is recommended that instead you
-- use the more [fully-featured S3 API](https:\/\/docs.ceph.com\/en\/latest\/radosgw\/s3\/objectops\/\#get-object) directly.
getObjectStorageBucketContent :: forall m . Linode.Common.MonadHTTP m => GetObjectStorageBucketContentParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> Linode.Common.ClientT m (Network.HTTP.Client.Types.Response GetObjectStorageBucketContentResponse) -- ^ Monadic computation which returns the result of the operation
getObjectStorageBucketContent parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetObjectStorageBucketContentResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetObjectStorageBucketContentResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                GetObjectStorageBucketContentResponseBody200)
                                                                                                                                                                                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetObjectStorageBucketContentResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                  GetObjectStorageBucketContentResponseBodyDefault)
                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Linode.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack (("/object-storage/buckets/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Linode.Common.stringifyModel (getObjectStorageBucketContentParametersPathClusterId parameters))) GHC.Base.++ "/")) GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Linode.Common.stringifyModel (getObjectStorageBucketContentParametersPathBucket parameters))) GHC.Base.++ "/object-list"))) [Linode.Common.QueryParameter (Data.Text.pack "delimiter") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getObjectStorageBucketContentParametersQueryDelimiter parameters) (Data.Text.pack "form") GHC.Types.False,
inode.Common.QueryParameter (Data.Text.pack "marker") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getObjectStorageBucketContentParametersQueryMarker parameters) (Data.Text.pack "form") GHC.Types.False,
inode.Common.QueryParameter (Data.Text.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getObjectStorageBucketContentParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
inode.Common.QueryParameter (Data.Text.pack "prefix") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getObjectStorageBucketContentParametersQueryPrefix parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/object-storage\/buckets\/{clusterId}\/{bucket}\/object-list.GET.parameters@ in the specification.
-- 
-- 
data GetObjectStorageBucketContentParameters = GetObjectStorageBucketContentParameters {
  -- | pathBucket: Represents the parameter named \'bucket\'
  -- 
  -- The bucket name.
  getObjectStorageBucketContentParametersPathBucket :: Data.Text.Internal.Text
  -- | pathClusterId: Represents the parameter named \'clusterId\'
  -- 
  -- The ID of the cluster this bucket exists in.
  , getObjectStorageBucketContentParametersPathClusterId :: Data.Text.Internal.Text
  -- | queryDelimiter: Represents the parameter named \'delimiter\'
  -- 
  -- The delimiter for object names; if given, object names will be returned up to the first occurrence of this character. This is most commonly used with the \`\/\` character to allow bucket transversal in a manner similar to a filesystem, however any delimiter may be used. Use in conjunction with \`prefix\` to see object names past the first occurrence of the delimiter.
  , getObjectStorageBucketContentParametersQueryDelimiter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryMarker: Represents the parameter named \'marker\'
  -- 
  -- The \"marker\" for this request, which can be used to paginate through large buckets. Its value should be the value of the \`next_marker\` property returned with the last page. Listing bucket contents *does not* support arbitrary page access. See the \`next_marker\` property in the responses section for more details.
  , getObjectStorageBucketContentParametersQueryMarker :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryPage_size: Represents the parameter named \'page_size\'
  -- 
  -- The number of items to return per page.
  -- 
  -- Constraints:
  -- 
  -- * Maxium  of 100.0
  -- * Minimum  of 25.0
  , getObjectStorageBucketContentParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryPrefix: Represents the parameter named \'prefix\'
  -- 
  -- Filters objects returned to only those whose name start with the given prefix. Commonly used in conjunction with \`delimiter\` to allow transversal of bucket contents in a manner similar to a filesystem.
  , getObjectStorageBucketContentParametersQueryPrefix :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetObjectStorageBucketContentParameters
    where toJSON obj = Data.Aeson.Types.Internal.object ("pathBucket" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersPathBucket obj : "pathClusterId" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersPathClusterId obj : "queryDelimiter" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryDelimiter obj : "queryMarker" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryMarker obj : "queryPage_size" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryPageSize obj : "queryPrefix" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryPrefix obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("pathBucket" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersPathBucket obj) GHC.Base.<> (("pathClusterId" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersPathClusterId obj) GHC.Base.<> (("queryDelimiter" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryDelimiter obj) GHC.Base.<> (("queryMarker" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryMarker obj) GHC.Base.<> (("queryPage_size" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryPageSize obj) GHC.Base.<> ("queryPrefix" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentParametersQueryPrefix obj))))))
instance Data.Aeson.Types.FromJSON.FromJSON GetObjectStorageBucketContentParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetObjectStorageBucketContentParameters" (\obj -> (((((GHC.Base.pure GetObjectStorageBucketContentParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathBucket")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathClusterId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryDelimiter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryMarker")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryPrefix"))
-- | Create a new 'GetObjectStorageBucketContentParameters' with all required fields.
mkGetObjectStorageBucketContentParameters :: Data.Text.Internal.Text -- ^ 'getObjectStorageBucketContentParametersPathBucket'
  -> Data.Text.Internal.Text -- ^ 'getObjectStorageBucketContentParametersPathClusterId'
  -> GetObjectStorageBucketContentParameters
mkGetObjectStorageBucketContentParameters getObjectStorageBucketContentParametersPathBucket getObjectStorageBucketContentParametersPathClusterId = GetObjectStorageBucketContentParameters{getObjectStorageBucketContentParametersPathBucket = getObjectStorageBucketContentParametersPathBucket,
                                                                                                                                                                                           getObjectStorageBucketContentParametersPathClusterId = getObjectStorageBucketContentParametersPathClusterId,
                                                                                                                                                                                           getObjectStorageBucketContentParametersQueryDelimiter = GHC.Maybe.Nothing,
                                                                                                                                                                                           getObjectStorageBucketContentParametersQueryMarker = GHC.Maybe.Nothing,
                                                                                                                                                                                           getObjectStorageBucketContentParametersQueryPageSize = GHC.Maybe.Nothing,
                                                                                                                                                                                           getObjectStorageBucketContentParametersQueryPrefix = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'getObjectStorageBucketContent'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetObjectStorageBucketContentResponseError' is used.
data GetObjectStorageBucketContentResponse =
   GetObjectStorageBucketContentResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetObjectStorageBucketContentResponse200 GetObjectStorageBucketContentResponseBody200 -- ^ One page of the requested bucket\'s contents.
  | GetObjectStorageBucketContentResponseDefault GetObjectStorageBucketContentResponseBodyDefault -- ^ Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/object-storage\/buckets\/{clusterId}\/{bucket}\/object-list.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetObjectStorageBucketContentResponseBody200 = GetObjectStorageBucketContentResponseBody200 {
  -- | data: This page of objects in the bucket.
  getObjectStorageBucketContentResponseBody200Data :: (GHC.Maybe.Maybe ([ObjectStorageObject]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetObjectStorageBucketContentResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("data" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentResponseBody200Data obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("data" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentResponseBody200Data obj)
instance Data.Aeson.Types.FromJSON.FromJSON GetObjectStorageBucketContentResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetObjectStorageBucketContentResponseBody200" (\obj -> GHC.Base.pure GetObjectStorageBucketContentResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "data"))
-- | Create a new 'GetObjectStorageBucketContentResponseBody200' with all required fields.
mkGetObjectStorageBucketContentResponseBody200 :: GetObjectStorageBucketContentResponseBody200
mkGetObjectStorageBucketContentResponseBody200 = GetObjectStorageBucketContentResponseBody200{getObjectStorageBucketContentResponseBody200Data = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.responses.ErrorResponse.content.application\/json.schema@ in the specification.
-- 
-- 
data GetObjectStorageBucketContentResponseBodyDefault = GetObjectStorageBucketContentResponseBodyDefault {
  -- | errors
  getObjectStorageBucketContentResponseBodyDefaultErrors :: (GHC.Maybe.Maybe ([ErrorObject]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetObjectStorageBucketContentResponseBodyDefault
    where toJSON obj = Data.Aeson.Types.Internal.object ("errors" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentResponseBodyDefaultErrors obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("errors" Data.Aeson.Types.ToJSON..= getObjectStorageBucketContentResponseBodyDefaultErrors obj)
instance Data.Aeson.Types.FromJSON.FromJSON GetObjectStorageBucketContentResponseBodyDefault
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetObjectStorageBucketContentResponseBodyDefault" (\obj -> GHC.Base.pure GetObjectStorageBucketContentResponseBodyDefault GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "errors"))
-- | Create a new 'GetObjectStorageBucketContentResponseBodyDefault' with all required fields.
mkGetObjectStorageBucketContentResponseBodyDefault :: GetObjectStorageBucketContentResponseBodyDefault
mkGetObjectStorageBucketContentResponseBodyDefault = GetObjectStorageBucketContentResponseBodyDefault{getObjectStorageBucketContentResponseBodyDefaultErrors = GHC.Maybe.Nothing}
