-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postLKEClusterRecycle
module Linode.Operations.PostLKEClusterRecycle where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Linode.Common
import Linode.Types

-- | > POST /lke/clusters/{clusterId}/recycle
-- 
-- Recycles all nodes in all pools of a designated Kubernetes Cluster. All Linodes within the Cluster will be deleted
-- and replaced with new Linodes on a rolling basis, which may take several minutes. Replacement Nodes are
-- installed with the latest available [patch version](https:\/\/github.com\/kubernetes\/community\/blob\/master\/contributors\/design-proposals\/release\/versioning.md\#kubernetes-release-versioning) for the Cluster\'s current Kubernetes minor release.
-- 
-- **Any local storage on deleted Linodes (such as \"hostPath\" and \"emptyDir\" volumes, or \"local\" PersistentVolumes) will be erased.**
postLKEClusterRecycle :: forall m . Linode.Common.MonadHTTP m => GHC.Types.Int -- ^ clusterId: ID of the Kubernetes cluster which contains nodes to be recycled.
  -> Linode.Common.ClientT m (Network.HTTP.Client.Types.Response PostLKEClusterRecycleResponse) -- ^ Monadic computation which returns the result of the operation
postLKEClusterRecycle clusterId = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostLKEClusterRecycleResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostLKEClusterRecycleResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                       Data.Aeson.Types.Internal.Object)
                                                                                                                                                                                  | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostLKEClusterRecycleResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                         PostLKEClusterRecycleResponseBodyDefault)
                                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (Linode.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/lke/clusters/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ Linode.Common.stringifyModel clusterId)) GHC.Base.++ "/recycle"))) GHC.Base.mempty)
-- | Represents a response of the operation 'postLKEClusterRecycle'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostLKEClusterRecycleResponseError' is used.
data PostLKEClusterRecycleResponse =
   PostLKEClusterRecycleResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostLKEClusterRecycleResponse200 Data.Aeson.Types.Internal.Object -- ^ Recycle request succeeded and is in progress.
  | PostLKEClusterRecycleResponseDefault PostLKEClusterRecycleResponseBodyDefault -- ^ Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @components.responses.ErrorResponse.content.application\/json.schema@ in the specification.
-- 
-- 
data PostLKEClusterRecycleResponseBodyDefault = PostLKEClusterRecycleResponseBodyDefault {
  -- | errors
  postLKEClusterRecycleResponseBodyDefaultErrors :: (GHC.Maybe.Maybe ([ErrorObject]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostLKEClusterRecycleResponseBodyDefault
    where toJSON obj = Data.Aeson.Types.Internal.object ("errors" Data.Aeson.Types.ToJSON..= postLKEClusterRecycleResponseBodyDefaultErrors obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("errors" Data.Aeson.Types.ToJSON..= postLKEClusterRecycleResponseBodyDefaultErrors obj)
instance Data.Aeson.Types.FromJSON.FromJSON PostLKEClusterRecycleResponseBodyDefault
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostLKEClusterRecycleResponseBodyDefault" (\obj -> GHC.Base.pure PostLKEClusterRecycleResponseBodyDefault GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "errors"))
-- | Create a new 'PostLKEClusterRecycleResponseBodyDefault' with all required fields.
mkPostLKEClusterRecycleResponseBodyDefault :: PostLKEClusterRecycleResponseBodyDefault
mkPostLKEClusterRecycleResponseBodyDefault = PostLKEClusterRecycleResponseBodyDefault{postLKEClusterRecycleResponseBodyDefaultErrors = GHC.Maybe.Nothing}
